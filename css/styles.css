/* Colour Palette
    off-black : #002438;
    navy      : #003049;
    orange    : #F77F00;
    yellow    : #FCBF49;
*/
:root {
    --off-black : #002438;
    --navy      : #003049;
    --orange    : #F77F00;
    --yellow    : #FCBF49;
}

body {
    font-family: sans-serif;
}

/* Helper Classes */
.flex-container {
    display: flex;
    justify-content: space-between;
}

/***** header & nav *******/
/** Step 1: Style the default show state. Starting with the small view, style the layout and links they will look when visible. */

header {
    background-color: var(--navy);
    color: var(--yellow);
    padding: 1rem;
}

header a {
    color: var(--yellow);
    text-decoration: none;
    display: block;
}

h1 a:hover {
    color: var(--orange);
}

.toggle-btn {
    /*remove button defaults*/
    border: none;
    outline: none;
    background-color: transparent;
}

.toggle-btn:hover {
    cursor: pointer;
}

.toggle-btn svg rect { fill: var(--yellow); }
.toggle-btn:hover svg rect { fill: var(--orange); }

/** hover states for default menu */
.menu a:hover,
.menu a:active,
.menu a:focus,
.menu a:focus-within {
    background-color: var(--off-black);
}

.menu li {
    text-align: center;
    /** the extra space from the line-height makes this a larger area*/
    line-height: 2.5rem;
}

/** 
Step 2: Hiding the menu. Once hidden, this will be your default state. As a note, using display: none means using a transition won't work :( **/

header nav {
    /** style this for how it will look overlapping the main content */
    /** this element does not have a parent container that relatively positioned, therefore it is positioned in relationship to the browser screen **/
    position: absolute;
    /**find the height of the closed header and will push the menu down that much */
    top: 5.0625rem;
    left: 0;
    width: 100vw;
    background-color: var(--navy);
    /** hide the menu**/
    max-height: 0;
    overflow: hidden;
    transition: max-height 0.7s ease-in-out;
}

/** Step 3: Create a class that will show/hide the menu **/
.show-nav {
    max-height: 100vh;
}

/** main content area **/
section {
    padding: 3.125rem;
    text-align: center;
    text-transform: uppercase;
}

section p {
    color: var(--off-black);
    border-bottom: 2px solid var(--orange);
    padding-bottom: 0.625rem;
    margin-bottom: 0.625rem;
    font-size: 1.777rem;
}

h2 {
    color: var(--off-black);
    font-size: 3.157rem;
    margin-bottom: 2rem;
}

.gallery {
    display: flex;
    flex-flow: wrap;
    justify-content: center;
}

.thumbnail {
    margin: 0 0.5rem;
    position: relative;
}

.thumbnail img {
    border-radius: 0.2rem;
    margin-bottom: 1rem;
    box-shadow: 3px 3px 3px rgba(0,0,0,0.2);
}

.thumbnail span {
    background-color: var(--yellow);
    color: #fff;
    font-weight: bold;
    padding: 0.5rem 1rem;
    border-radius: 0.3125rem;
    user-select: none;
    /** position the span over the image**/
    position: absolute;
    top: -20px;
    right: -10px;
}

/* Step 4: Add a media condition and show the nav by default. Hide the toggle button and styling the navigation as a horizontal menu */

/**960px*/
@media screen and (min-width: 60rem) {
    .inner-container {
        max-width: 60rem;
        margin: auto;
    }

    .toggle-btn { display: none; }

    /** we want to see the nav by default, so give it a height */
    header nav {
        /** reset the position value and width */
        /** by default element has a position of static */
        position: static; /**every elements default state*/
        width: auto; /** resetting the width */
        max-height: unset;
        overflow: visible;
    }

    .menu,
    header .inner-container {
        display: flex;
        align-items: center;
        justify-content: space-between;
    }
    .menu li {
        margin-left: 0.0625rem;
    }

    .menu li a { padding: 0 0.5rem; }

    .menu a:hover,
    .menu a:active,
    .menu a:focus,
    .menu a:focus-within {
        background-color: transparent;
        color: var(--orange);
    }
}